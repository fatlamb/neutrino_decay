#! /usr/bin/python

import numpy as np
import matplotlib.pyplot as plt
import PMNSGen
import random


"""
Set figure size and (global) font size.
"""

from pylab import rcParams
rcParams['figure.figsize'] = 12, 10
plt.rc('font', size=20)



"""
Read in the 4 files generated by gamma_traces.py. One for each phi.
"""

files=[]
fnames=[]
for t in range(0,4):
	fnames.append("mult_"+str(t)+"dcy_mix1.npz")

for fn in fnames:
	files.append(np.load(fn))




"""
Plot each energy, amplitude pair. Assign a name (for the legend), and a line color to each.
"""

names = [r"$0$",r"$\pi/10$",r"$2\pi/10$",r"$3\pi/10$"]
colors=["red","orange","green","blue","purple"]
fig,ax=plt.subplots()		
for f in enumerate(files):
	ax.plot(f[1]['e'],f[1]['p'],colors[f[0]],label = r"$\phi = $"+names[f[0]])



"""
Setting axis scales and names.
"""

ax.set_xscale('log')
ax.set_ylabel('Muon Antineutrino Survival Probability')
ax.set_xlabel('Energy (GeV)')
ax.set_title('Antineutrino Oscillation. Mixed Decay')

# Now add the legend with some customizations.
#legend = ax.legend(loc='center right', shadow=False)
legend = ax.legend(bbox_to_anchor=(0.9, 0.65), bbox_transform=plt.gcf().transFigure, shadow=False)

# The frame is matplotlib.patches.Rectangle instance surrounding the legend.
frame = legend.get_frame()
frame.set_facecolor('1.0')

# Set the label fontsize and linewidth
for label in legend.get_texts():
    label.set_fontsize(20)

for label in legend.get_lines():
    label.set_linewidth(1.5)  # the legend line width

plt.show()





